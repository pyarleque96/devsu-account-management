--
-- PostgreSQL database dump
--

-- Dumped from database version 16.1
-- Dumped by pg_dump version 16.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: account-movement; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA "account-movement";


ALTER SCHEMA "account-movement" OWNER TO postgres;

--
-- Name: client-person; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA "client-person";


ALTER SCHEMA "client-person" OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: account-movement; Owner: postgres
--

CREATE TABLE "account-movement"."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE "account-movement"."__EFMigrationsHistory" OWNER TO postgres;

--
-- Name: accounts; Type: TABLE; Schema: account-movement; Owner: postgres
--

CREATE TABLE "account-movement".accounts (
    id bigint NOT NULL,
    account_number text NOT NULL,
    account_type text NOT NULL,
    initial_balance numeric NOT NULL,
    is_active boolean NOT NULL,
    client_id bigint NOT NULL,
    client_name text NOT NULL,
    client_address text NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE "account-movement".accounts OWNER TO postgres;

--
-- Name: accounts_id_seq; Type: SEQUENCE; Schema: account-movement; Owner: postgres
--

ALTER TABLE "account-movement".accounts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "account-movement".accounts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: movements; Type: TABLE; Schema: account-movement; Owner: postgres
--

CREATE TABLE "account-movement".movements (
    id bigint NOT NULL,
    "AccountId" bigint NOT NULL,
    date timestamp with time zone NOT NULL,
    movement_type text NOT NULL,
    value numeric NOT NULL,
    balance numeric NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE "account-movement".movements OWNER TO postgres;

--
-- Name: movements_id_seq; Type: SEQUENCE; Schema: account-movement; Owner: postgres
--

ALTER TABLE "account-movement".movements ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "account-movement".movements_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: client-person; Owner: postgres
--

CREATE TABLE "client-person"."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE "client-person"."__EFMigrationsHistory" OWNER TO postgres;

--
-- Name: clients; Type: TABLE; Schema: client-person; Owner: postgres
--

CREATE TABLE "client-person".clients (
    id bigint NOT NULL,
    person_id integer NOT NULL,
    password text NOT NULL,
    is_active boolean NOT NULL,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE "client-person".clients OWNER TO postgres;

--
-- Name: clients_id_seq; Type: SEQUENCE; Schema: client-person; Owner: postgres
--

ALTER TABLE "client-person".clients ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "client-person".clients_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: persons; Type: TABLE; Schema: client-person; Owner: postgres
--

CREATE TABLE "client-person".persons (
    id integer NOT NULL,
    name text NOT NULL,
    gender text,
    age integer NOT NULL,
    identification text NOT NULL,
    address text,
    phone text,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE "client-person".persons OWNER TO postgres;

--
-- Name: persons_id_seq; Type: SEQUENCE; Schema: client-person; Owner: postgres
--

ALTER TABLE "client-person".persons ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "client-person".persons_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: account-movement; Owner: postgres
--

COPY "account-movement"."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20241022194935_Init	6.0.29
\.


--
-- Data for Name: accounts; Type: TABLE DATA; Schema: account-movement; Owner: postgres
--

COPY "account-movement".accounts (id, account_number, account_type, initial_balance, is_active, client_id, client_name, client_address, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: movements; Type: TABLE DATA; Schema: account-movement; Owner: postgres
--

COPY "account-movement".movements (id, "AccountId", date, movement_type, value, balance, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: client-person; Owner: postgres
--

COPY "client-person"."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20241022194929_Init	6.0.29
\.


--
-- Data for Name: clients; Type: TABLE DATA; Schema: client-person; Owner: postgres
--

COPY "client-person".clients (id, person_id, password, is_active, created_at, updated_at) FROM stdin;
\.


--
-- Data for Name: persons; Type: TABLE DATA; Schema: client-person; Owner: postgres
--

COPY "client-person".persons (id, name, gender, age, identification, address, phone, created_at, updated_at) FROM stdin;
\.


--
-- Name: accounts_id_seq; Type: SEQUENCE SET; Schema: account-movement; Owner: postgres
--

SELECT pg_catalog.setval('"account-movement".accounts_id_seq', 1, false);


--
-- Name: movements_id_seq; Type: SEQUENCE SET; Schema: account-movement; Owner: postgres
--

SELECT pg_catalog.setval('"account-movement".movements_id_seq', 1, false);


--
-- Name: clients_id_seq; Type: SEQUENCE SET; Schema: client-person; Owner: postgres
--

SELECT pg_catalog.setval('"client-person".clients_id_seq', 1, false);


--
-- Name: persons_id_seq; Type: SEQUENCE SET; Schema: client-person; Owner: postgres
--

SELECT pg_catalog.setval('"client-person".persons_id_seq', 1, false);


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: account-movement; Owner: postgres
--

ALTER TABLE ONLY "account-movement"."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: accounts PK_accounts; Type: CONSTRAINT; Schema: account-movement; Owner: postgres
--

ALTER TABLE ONLY "account-movement".accounts
    ADD CONSTRAINT "PK_accounts" PRIMARY KEY (id);


--
-- Name: movements PK_movements; Type: CONSTRAINT; Schema: account-movement; Owner: postgres
--

ALTER TABLE ONLY "account-movement".movements
    ADD CONSTRAINT "PK_movements" PRIMARY KEY (id);


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: client-person; Owner: postgres
--

ALTER TABLE ONLY "client-person"."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: clients PK_clients; Type: CONSTRAINT; Schema: client-person; Owner: postgres
--

ALTER TABLE ONLY "client-person".clients
    ADD CONSTRAINT "PK_clients" PRIMARY KEY (id);


--
-- Name: persons PK_persons; Type: CONSTRAINT; Schema: client-person; Owner: postgres
--

ALTER TABLE ONLY "client-person".persons
    ADD CONSTRAINT "PK_persons" PRIMARY KEY (id);


--
-- Name: IX_accounts_account_number; Type: INDEX; Schema: account-movement; Owner: postgres
--

CREATE UNIQUE INDEX "IX_accounts_account_number" ON "account-movement".accounts USING btree (account_number);


--
-- Name: IX_movements_AccountId; Type: INDEX; Schema: account-movement; Owner: postgres
--

CREATE INDEX "IX_movements_AccountId" ON "account-movement".movements USING btree ("AccountId");


--
-- Name: IX_clients_person_id; Type: INDEX; Schema: client-person; Owner: postgres
--

CREATE INDEX "IX_clients_person_id" ON "client-person".clients USING btree (person_id);


--
-- Name: movements FK_movements_accounts_AccountId; Type: FK CONSTRAINT; Schema: account-movement; Owner: postgres
--

ALTER TABLE ONLY "account-movement".movements
    ADD CONSTRAINT "FK_movements_accounts_AccountId" FOREIGN KEY ("AccountId") REFERENCES "account-movement".accounts(id) ON DELETE CASCADE;


--
-- Name: clients FK_clients_persons_person_id; Type: FK CONSTRAINT; Schema: client-person; Owner: postgres
--

ALTER TABLE ONLY "client-person".clients
    ADD CONSTRAINT "FK_clients_persons_person_id" FOREIGN KEY (person_id) REFERENCES "client-person".persons(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

